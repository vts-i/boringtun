---
name: vendor-release

on:
  push:
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  vendor-release:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - name: Set release name
        run: |
          rel_name="boringtun-$(basename ${{ github.ref }} | tr -d 'v')"
          echo "rel_name=${rel_name}" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ${{ env.rel_name }}
          submodules: 'recursive'
      - name: Create vendored tarball
        run: |
          # Download all the crates
          ( cd ${{ env.rel_name }} && cargo vendor )

          # Add to Cargo config so users can build directly
          {
            printf "\n\n[source.crates-io]\n"
            printf "replace-with = \"vendored-sources\"\n\n"
            printf "[source.vendored-sources]\n"
            printf "directory = \"vendor\"\n"
          } >> ${{ env.rel_name }}/.cargo/config

          # Generate the tarball
          tar --owner=root --group=root --exclude .git -czf "${{ env.rel_name }}-vendored.tar.gz" "${{ env.rel_name }}"
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: Upstream sources with vendored/updated crates
          draft: false
          prerelease: false
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the create_release step above
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.rel_name }}-vendored.tar.gz
          asset_name: ${{ env.rel_name }}-vendored.tar.gz
          asset_content_type: application/gzip
